{"ast":null,"code":"var _jsxFileName = \"/Users/taylorsimpson/Documents/react/music-chatbot/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport SpotifyWebApi from 'spotify-web-api-js';\nconst spotifyApi = new SpotifyWebApi();\nconst searchUrl = \"https://en.wikipedia.org/w/api.php?action=opensearch&format=json&search=\"; // site that doesn’t send Access-Control-*\n\nclass App extends Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n    const token = params.access_token;\n\n    if (token) {\n      spotifyApi.setAccessToken(token);\n    }\n\n    this.state = {\n      loggedIn: token ? true : false,\n      nowPlaying: {\n        name: 'Not Checked',\n        artist: '',\n        albumArt: '',\n        releaseDate: ''\n      }\n    };\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q);\n\n    while (e) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n      e = r.exec(q);\n    }\n\n    return hashParams;\n  }\n\n  getNowPlaying() {\n    spotifyApi.getMyCurrentPlaybackState().then(response => {\n      this.setState({\n        nowPlaying: {\n          name: response.item.name,\n          albumArt: response.item.album.images[0].url,\n          artist: response.item.artists[0].name,\n          releaseDate: response.item.album.release_date,\n          artistDecriptiion: getWiki(response.item.artists[0].name)\n        }\n      });\n    });\n  }\n\n  formatReleaseDate(date) {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let selectedMonthName = months[parseInt(date.slice(5, 7) - 1)];\n    return selectedMonthName + \" \" + date.slice(8, 10) + \", \" + date.slice(0, 4);\n  }\n\n  getWiki(term) {\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    fetch(proxyurl + searchUrl + \"/\" + term) // https://cors-anywhere.herokuapp.com/https://example.com\n    .then(response => response.text()).then(contents => {\n      console.log(contents);\n    }).catch(() => console.log(\"Can’t access \" + searchUrl + \" response. Blocked by browser?\"));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"http://localhost:8888\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \" Login to Spotify \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Now Playing: \", this.state.nowPlaying.name), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Artist: \", this.state.nowPlaying.artist), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.nowPlaying.albumArt,\n      alt: \"Album art not found\",\n      style: {\n        height: 150\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.formatReleaseDate(this.state.nowPlaying.releaseDate)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.getWiki(this.state.nowPlaying.artist)), this.state.loggedIn && React.createElement(\"button\", {\n      onClick: () => this.getNowPlaying(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Check Now Playing\"));\n  }\n\n} //}\n\n\nexport default App;","map":{"version":3,"sources":["/Users/taylorsimpson/Documents/react/music-chatbot/client/src/App.js"],"names":["React","Component","SpotifyWebApi","spotifyApi","searchUrl","App","constructor","params","getHashParams","token","access_token","setAccessToken","state","loggedIn","nowPlaying","name","artist","albumArt","releaseDate","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","getNowPlaying","getMyCurrentPlaybackState","then","response","setState","item","album","images","url","artists","release_date","artistDecriptiion","getWiki","formatReleaseDate","date","months","selectedMonthName","parseInt","slice","term","proxyurl","fetch","text","contents","console","log","catch","render","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AAEA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,MAAMC,UAAU,GAAG,IAAID,aAAJ,EAAnB;AAEA,MAAME,SAAS,GAAG,0EAAlB,C,CAA8F;;AAE9F,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAC1BK,EAAAA,WAAW,GAAG;AACZ;AACA,UAAMC,MAAM,GAAG,KAAKC,aAAL,EAAf;AACA,UAAMC,KAAK,GAAGF,MAAM,CAACG,YAArB;;AACA,QAAID,KAAJ,EAAW;AACTN,MAAAA,UAAU,CAACQ,cAAX,CAA0BF,KAA1B;AACD;;AACD,SAAKG,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAEJ,KAAK,GAAG,IAAH,GAAU,KADd;AAEXK,MAAAA,UAAU,EAAE;AAAEC,QAAAA,IAAI,EAAE,aAAR;AAAuBC,QAAAA,MAAM,EAAE,EAA/B;AAAmCC,QAAAA,QAAQ,EAAE,EAA7C;AAAiDC,QAAAA,WAAW,EAAE;AAA9D;AAFD,KAAb;AAID;;AAEDV,EAAAA,aAAa,GAAG;AACd,QAAIW,UAAU,GAAG,EAAjB;AACA,QAAIC,CAAJ;AAAA,QAAOC,CAAC,GAAG,sBAAX;AAAA,QACEC,CAAC,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,SAArB,CAA+B,CAA/B,CADN;AAEAN,IAAAA,CAAC,GAAGC,CAAC,CAACM,IAAF,CAAOL,CAAP,CAAJ;;AACA,WAAOF,CAAP,EAAU;AACRD,MAAAA,UAAU,CAACC,CAAC,CAAC,CAAD,CAAF,CAAV,GAAmBQ,kBAAkB,CAACR,CAAC,CAAC,CAAD,CAAF,CAArC;AACAA,MAAAA,CAAC,GAAGC,CAAC,CAACM,IAAF,CAAOL,CAAP,CAAJ;AACD;;AACD,WAAOH,UAAP;AACD;;AAEDU,EAAAA,aAAa,GAAG;AACd1B,IAAAA,UAAU,CAAC2B,yBAAX,GACGC,IADH,CACSC,QAAD,IAAc;AAClB,WAAKC,QAAL,CAAc;AACZnB,QAAAA,UAAU,EAAE;AACVC,UAAAA,IAAI,EAAEiB,QAAQ,CAACE,IAAT,CAAcnB,IADV;AAEVE,UAAAA,QAAQ,EAAEe,QAAQ,CAACE,IAAT,CAAcC,KAAd,CAAoBC,MAApB,CAA2B,CAA3B,EAA8BC,GAF9B;AAGVrB,UAAAA,MAAM,EAAEgB,QAAQ,CAACE,IAAT,CAAcI,OAAd,CAAsB,CAAtB,EAAyBvB,IAHvB;AAIVG,UAAAA,WAAW,EAAEc,QAAQ,CAACE,IAAT,CAAcC,KAAd,CAAoBI,YAJvB;AAKVC,UAAAA,iBAAiB,EAAEC,OAAO,CAACT,QAAQ,CAACE,IAAT,CAAcI,OAAd,CAAsB,CAAtB,EAAyBvB,IAA1B;AALhB;AADA,OAAd;AASD,KAXH;AAYD;;AAED2B,EAAAA,iBAAiB,CAACC,IAAD,EAAO;AACtB,QAAIC,MAAM,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EACX,MADW,EACH,QADG,EACO,WADP,EACoB,SADpB,EAC+B,UAD/B,EAC2C,UAD3C,CAAb;AAGA,QAAIC,iBAAiB,GAAGD,MAAM,CAACE,QAAQ,CAACH,IAAI,CAACI,KAAL,CAAW,CAAX,EAAc,CAAd,IAAmB,CAApB,CAAT,CAA9B;AACA,WAAOF,iBAAiB,GAAG,GAApB,GAA0BF,IAAI,CAACI,KAAL,CAAW,CAAX,EAAc,EAAd,CAA1B,GAA8C,IAA9C,GAAqDJ,IAAI,CAACI,KAAL,CAAW,CAAX,EAAc,CAAd,CAA5D;AACD;;AAEDN,EAAAA,OAAO,CAACO,IAAD,EAAO;AACZ,UAAMC,QAAQ,GAAG,sCAAjB;AACAC,IAAAA,KAAK,CAACD,QAAQ,GAAG7C,SAAX,GAAuB,GAAvB,GAA6B4C,IAA9B,CAAL,CAAyC;AAAzC,KACGjB,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACmB,IAAT,EADpB,EAEGpB,IAFH,CAEQqB,QAAQ,IAAI;AAAEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAAuB,KAF7C,EAIGG,KAJH,CAIS,MAAMF,OAAO,CAACC,GAAR,CAAY,kBAAkBlD,SAAlB,GAA8B,gCAA1C,CAJf;AAKD;;AAGDoD,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,IAAI,EAAC,uBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACgB,KAAK5C,KAAL,CAAWE,UAAX,CAAsBC,IADtC,CAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACW,KAAKH,KAAL,CAAWE,UAAX,CAAsBE,MADjC,CALF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAE,KAAKJ,KAAL,CAAWE,UAAX,CAAsBG,QAAhC;AAA0C,MAAA,GAAG,EAAC,qBAA9C;AAAoE,MAAA,KAAK,EAAE;AAAEwC,QAAAA,MAAM,EAAE;AAAV,OAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CARF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKf,iBAAL,CAAuB,KAAK9B,KAAL,CAAWE,UAAX,CAAsBI,WAA7C,CADH,CAXF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKuB,OAAL,CAAa,KAAK7B,KAAL,CAAWE,UAAX,CAAsBE,MAAnC,CAAN,CAfF,EAiBG,KAAKJ,KAAL,CAAWC,QAAX,IACC;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKgB,aAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAlBJ,CADF;AAyBD;;AArFyB,C,CAuF5B;;;AAEA,eAAexB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nimport SpotifyWebApi from 'spotify-web-api-js';\nconst spotifyApi = new SpotifyWebApi();\n\nconst searchUrl = \"https://en.wikipedia.org/w/api.php?action=opensearch&format=json&search=\"; // site that doesn’t send Access-Control-*\n\nclass App extends Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n    const token = params.access_token;\n    if (token) {\n      spotifyApi.setAccessToken(token);\n    }\n    this.state = {\n      loggedIn: token ? true : false,\n      nowPlaying: { name: 'Not Checked', artist: '', albumArt: '', releaseDate: '' },\n    }\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n      q = window.location.hash.substring(1);\n    e = r.exec(q)\n    while (e) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n      e = r.exec(q);\n    }\n    return hashParams;\n  }\n\n  getNowPlaying() {\n    spotifyApi.getMyCurrentPlaybackState()\n      .then((response) => {\n        this.setState({\n          nowPlaying: {\n            name: response.item.name,\n            albumArt: response.item.album.images[0].url,\n            artist: response.item.artists[0].name,\n            releaseDate: response.item.album.release_date,\n            artistDecriptiion: getWiki(response.item.artists[0].name)\n          }\n        });\n      })\n  }\n\n  formatReleaseDate(date) {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n      \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n    let selectedMonthName = months[parseInt(date.slice(5, 7) - 1)]\n    return selectedMonthName + \" \" + date.slice(8, 10) + \", \" + date.slice(0, 4);\n  }\n\n  getWiki(term) {\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    fetch(proxyurl + searchUrl + \"/\" + term) // https://cors-anywhere.herokuapp.com/https://example.com\n      .then(response => response.text())\n      .then(contents => { console.log(contents) }\n      )\n      .catch(() => console.log(\"Can’t access \" + searchUrl + \" response. Blocked by browser?\"))\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\" >\n        <a href='http://localhost:8888' > Login to Spotify </a>\n        <div>\n          Now Playing: {this.state.nowPlaying.name}\n        </div>\n        <div>\n          Artist: {this.state.nowPlaying.artist}\n        </div>\n        <div>\n          <img src={this.state.nowPlaying.albumArt} alt=\"Album art not found\" style={{ height: 150 }} />\n        </div>\n        <div>\n          {this.formatReleaseDate(this.state.nowPlaying.releaseDate)}\n        </div>\n\n        <div>{this.getWiki(this.state.nowPlaying.artist)}</div>\n\n        {this.state.loggedIn &&\n          <button onClick={() => this.getNowPlaying()}>\n            Check Now Playing\n          </button>\n        }\n      </div >\n    );\n  }\n}\n//}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}