{"ast":null,"code":"var _jsxFileName = \"/Users/taylorsimpson/Documents/react/Spotify-API-Intro/client/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Spotify from 'spotify-web-api-js';\nconst spotifyWebApi = new Spotify();\n\nclass App extends Component() {\n  constructor() {\n    super();\n    const params = this.getHashParams;\n    this.state = {\n      loggedIn: params.access_token ? true : false,\n      nowPlaying: {\n        name: \"Not Checked\",\n        image: \"\"\n      }\n    };\n\n    if (params.access_token) {\n      spotifyWebApi.setAccessToken(params.access_token);\n    }\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n\n    while (e = r.exec(q)) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n\n    return hashParams;\n  }\n\n  getNowPlaying() {\n    spotifyWebApi.getMyCurrentPlaybackState().then(response => {\n      this.setState({\n        nowPlaying: {\n          name: response.item.name,\n          image: response.item.image\n        }\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"http://localhost:8888\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Login with Spotify\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Now Playing \", this.state.nowPlaying.name), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.nowPlaying.image,\n      style: {\n        width: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: () => this.getNowPlaying(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Check now Playing\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/taylorsimpson/Documents/react/Spotify-API-Intro/client/src/App.js"],"names":["React","Spotify","spotifyWebApi","App","Component","constructor","params","getHashParams","state","loggedIn","access_token","nowPlaying","name","image","setAccessToken","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","getNowPlaying","getMyCurrentPlaybackState","then","response","setState","item","render","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,MAAMC,aAAa,GAAG,IAAID,OAAJ,EAAtB;;AAEA,MAAME,GAAN,SAAkBC,SAAS,EAA3B,CAA8B;AAC5BC,EAAAA,WAAW,GAAG;AACZ;AACA,UAAMC,MAAM,GAAG,KAAKC,aAApB;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAEH,MAAM,CAACI,YAAP,GAAsB,IAAtB,GAA6B,KAD5B;AAEXC,MAAAA,UAAU,EAAE;AACVC,QAAAA,IAAI,EAAE,aADI;AAEVC,QAAAA,KAAK,EAAE;AAFG;AAFD,KAAb;;AAOA,QAAIP,MAAM,CAACI,YAAX,EAAyB;AACvBR,MAAAA,aAAa,CAACY,cAAd,CAA6BR,MAAM,CAACI,YAApC;AACD;AACF;;AACDH,EAAAA,aAAa,GAAG;AACd,QAAIQ,UAAU,GAAG,EAAjB;AACA,QAAIC,CAAJ;AAAA,QAAOC,CAAC,GAAG,sBAAX;AAAA,QACEC,CAAC,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,SAArB,CAA+B,CAA/B,CADN;;AAEA,WAAON,CAAC,GAAGC,CAAC,CAACM,IAAF,CAAOL,CAAP,CAAX,EAAsB;AACpBH,MAAAA,UAAU,CAACC,CAAC,CAAC,CAAD,CAAF,CAAV,GAAmBQ,kBAAkB,CAACR,CAAC,CAAC,CAAD,CAAF,CAArC;AACD;;AACD,WAAOD,UAAP;AAED;;AAEDU,EAAAA,aAAa,GAAG;AACdvB,IAAAA,aAAa,CAACwB,yBAAd,GACGC,IADH,CACSC,QAAD,IAAc;AAClB,WAAKC,QAAL,CAAc;AACZlB,QAAAA,UAAU,EAAE;AACVC,UAAAA,IAAI,EAAEgB,QAAQ,CAACE,IAAT,CAAclB,IADV;AAEVC,UAAAA,KAAK,EAAEe,QAAQ,CAACE,IAAT,CAAcjB;AAFX;AADA,OAAd;AAMD,KARH;AASD;;AAEDkB,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,IAAI,EAAC,uBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAkB,KAAKvB,KAAL,CAAWG,UAAX,CAAsBC,IAAxC,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK;AAAK,MAAA,GAAG,EAAE,KAAKJ,KAAL,CAAWG,UAAX,CAAsBE,KAAhC;AAAuC,MAAA,KAAK,EAAE;AAAEmB,QAAAA,KAAK,EAAE;AAAT,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAL,CALF,EAME;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKP,aAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BANF,CADF;AAUD;;AAjD2B;;AAoD9B,eAAetB,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Spotify from 'spotify-web-api-js';\n\nconst spotifyWebApi = new Spotify();\n\nclass App extends Component() {\n  constructor() {\n    super();\n    const params = this.getHashParams;\n    this.state = {\n      loggedIn: params.access_token ? true : false,\n      nowPlaying: {\n        name: \"Not Checked\",\n        image: \"\"\n      }\n    }\n    if (params.access_token) {\n      spotifyWebApi.setAccessToken(params.access_token)\n    }\n  }\n  getHashParams() {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n      q = window.location.hash.substring(1);\n    while (e = r.exec(q)) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n    return hashParams;\n\n  }\n\n  getNowPlaying() {\n    spotifyWebApi.getMyCurrentPlaybackState()\n      .then((response) => {\n        this.setState({\n          nowPlaying: {\n            name: response.item.name,\n            image: response.item.image\n          }\n        })\n      })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <a href=\"http://localhost:8888\">\n          <button>Login with Spotify</button>\n        </a>\n        <div>Now Playing {this.state.nowPlaying.name}</div>\n        <div><img src={this.state.nowPlaying.image} style={{ width: 100 }} /></div>\n        <button onClick={() => this.getNowPlaying()}>Check now Playing</button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}