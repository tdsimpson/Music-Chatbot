{"ast":null,"code":"var _jsxFileName = \"/Users/taylorsimpson/Documents/react/music-chatbot/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport SpotifyWebApi from 'spotify-web-api-js';\nconst spotifyApi = new SpotifyWebApi();\nconst searchUrl = \"https://en.wikipedia.org/w/api.php?action=opensearch&format=json&search=\"; // site that doesn’t send Access-Control-*\n\nclass App extends Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n    const token = params.access_token;\n\n    if (token) {\n      spotifyApi.setAccessToken(token);\n    }\n\n    this.state = {\n      loggedIn: token ? true : false,\n      nowPlaying: {\n        name: 'Not Checked',\n        artist: '',\n        albumArt: '',\n        releaseDate: ''\n      },\n      items: [],\n      isLoaded: false\n    };\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q);\n\n    while (e) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n      e = r.exec(q);\n    }\n\n    return hashParams;\n  }\n\n  getNowPlaying() {\n    spotifyApi.getMyCurrentPlaybackState().then(response => {\n      this.setState({\n        nowPlaying: {\n          name: response.item.name,\n          albumArt: response.item.album.images[0].url,\n          artist: response.item.artists[0].name,\n          releaseDate: response.item.album.release_date\n        }\n      });\n    });\n  }\n\n  formatReleaseDate(date) {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let selectedMonthName = months[parseInt(date.slice(5, 7) - 1)];\n    return selectedMonthName + \" \" + date.slice(8, 10) + \", \" + date.slice(0, 4);\n  }\n\n  componentDidMount() {\n    let term = this.state.nowPlaying.artist;\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    fetch(proxyurl + searchUrl + \"/\" + term) // https://cors-anywhere.herokuapp.com/https://example.com\n    .then(response => response.text()).then(contents => {\n      this.setState({\n        isLoaded: true,\n        items: JSON\n      });\n    }).catch(() => console.log(\"Can’t access \" + searchUrl + \" response. Blocked by browser?\"));\n  }\n\n  render() {\n    let _this$state = this.state,\n        isLoaded = _this$state.isLoaded,\n        items = _this$state.items;\n\n    if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \" Loading...\");\n    } else {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"http://localhost:8888\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \" Login to Spotify \"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Now Playing: \", this.state.nowPlaying.name), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Artist: \", this.state.nowPlaying.artist), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.nowPlaying.albumArt,\n        alt: \"Album art not found\",\n        style: {\n          height: 150\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, this.formatReleaseDate(this.state.nowPlaying.releaseDate)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, items.map(item => React.createElement(\"li\", {\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, item[0])), \";\"), this.state.loggedIn && React.createElement(\"button\", {\n        onClick: () => this.getNowPlaying(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Check Now Playing\"));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/taylorsimpson/Documents/react/music-chatbot/client/src/App.js"],"names":["React","Component","SpotifyWebApi","spotifyApi","searchUrl","App","constructor","params","getHashParams","token","access_token","setAccessToken","state","loggedIn","nowPlaying","name","artist","albumArt","releaseDate","items","isLoaded","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","getNowPlaying","getMyCurrentPlaybackState","then","response","setState","item","album","images","url","artists","release_date","formatReleaseDate","date","months","selectedMonthName","parseInt","slice","componentDidMount","term","proxyurl","fetch","text","contents","JSON","catch","console","log","render","height","map","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nimport SpotifyWebApi from 'spotify-web-api-js';\nconst spotifyApi = new SpotifyWebApi();\n\nconst searchUrl = \"https://en.wikipedia.org/w/api.php?action=opensearch&format=json&search=\"; // site that doesn’t send Access-Control-*\n\nclass App extends Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n    const token = params.access_token;\n    if (token) {\n      spotifyApi.setAccessToken(token);\n    }\n    this.state = {\n      loggedIn: token ? true : false,\n      nowPlaying: { name: 'Not Checked', artist: '', albumArt: '', releaseDate: '' },\n      items: [],\n      isLoaded: false\n    }\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n      q = window.location.hash.substring(1);\n    e = r.exec(q)\n    while (e) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n      e = r.exec(q);\n    }\n    return hashParams;\n  }\n\n  getNowPlaying() {\n    spotifyApi.getMyCurrentPlaybackState()\n      .then((response) => {\n        this.setState({\n          nowPlaying: {\n            name: response.item.name,\n            albumArt: response.item.album.images[0].url,\n            artist: response.item.artists[0].name,\n            releaseDate: response.item.album.release_date\n          }\n        });\n      })\n  }\n\n  formatReleaseDate(date) {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n      \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n    let selectedMonthName = months[parseInt(date.slice(5, 7) - 1)]\n    return selectedMonthName + \" \" + date.slice(8, 10) + \", \" + date.slice(0, 4);\n  }\n\n  componentDidMount() {\n    let term = this.state.nowPlaying.artist;\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    fetch(proxyurl + searchUrl + \"/\" + term) // https://cors-anywhere.herokuapp.com/https://example.com\n      .then(response => response.text())\n      .then(contents => {\n        this.setState({\n          isLoaded: true,\n          items: JSON,\n        })\n      })\n      .catch(() => console.log(\"Can’t access \" + searchUrl + \" response. Blocked by browser?\"))\n  }\n\n\n  render() {\n    let { isLoaded, items } = this.state;\n    if (!isLoaded) {\n      return <div> Loading...</div>;\n    }\n    else {\n      return (\n        <div className=\"App\" >\n          <a href='http://localhost:8888' > Login to Spotify </a>\n          <div>\n            Now Playing: {this.state.nowPlaying.name}\n          </div>\n          <div>\n            Artist: {this.state.nowPlaying.artist}\n          </div>\n          <div>\n            <img src={this.state.nowPlaying.albumArt} alt=\"Album art not found\" style={{ height: 150 }} />\n          </div>\n          <div>\n            {this.formatReleaseDate(this.state.nowPlaying.releaseDate)}\n          </div>\n\n          <div>{items.map(item => (\n            <li key={item.id}>\n              {item[0]}\n            </li>\n          ))};</div>\n\n          {this.state.loggedIn &&\n            <button onClick={() => this.getNowPlaying()}>\n              Check Now Playing\n          </button>\n          }\n        </div >\n      );\n    }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}