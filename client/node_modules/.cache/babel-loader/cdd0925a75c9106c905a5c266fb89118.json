{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/taylorsimpson/Documents/react/song-analysis/client/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = usePalette;\n\nvar _react = require(\"react\");\n\nvar _getPalette = _interopRequireDefault(require(\"./getPalette\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst initialState = {\n  loading: true,\n  data: [],\n  error: undefined\n};\n/**\n * usePalette reducer\n * @param {object} state\n * @param {object} action\n */\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'getPalette':\n      return initialState;\n\n    case 'resolvePalette':\n      return { ...state,\n        data: action.payload,\n        loading: false\n      };\n\n    case 'rejectPalette':\n      return { ...state,\n        error: action.payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}\n/**\n * React hook for usePalette from PaletteThief\n * @param {String} imgSrc\n * @param {String} format\n * @param {String} crossOrigin\n * @param {Number} quality\n */\n\n\nfunction usePalette(imgSrc, colorCount = 2, format = 'rgbString', options = {}) {\n  const _options$crossOrigin = options.crossOrigin,\n        crossOrigin = _options$crossOrigin === void 0 ? null : _options$crossOrigin,\n        _options$quality = options.quality,\n        quality = _options$quality === void 0 ? 10 : _options$quality;\n\n  const _ref = (0, _react.useReducer)(reducer, initialState),\n        _ref2 = _slicedToArray(_ref, 2),\n        state = _ref2[0],\n        dispatch = _ref2[1];\n\n  (0, _react.useEffect)(() => {\n    dispatch({\n      type: 'getPalette'\n    });\n    (0, _getPalette.default)(imgSrc, colorCount, format, crossOrigin, quality).then(palette => {\n      dispatch({\n        type: 'resolvePalette',\n        payload: palette\n      });\n    }).catch(ex => {\n      dispatch({\n        type: 'rejectPalette',\n        payload: ex\n      });\n    });\n  }, [imgSrc]);\n  return state;\n}","map":null,"metadata":{},"sourceType":"script"}